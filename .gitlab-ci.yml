variables:
  PROJECT_NAME: BallDragDrop
  PROJECT_RESULTS_NAME: BallDragDrop.WPF
before_script:
  - echo "starting build for $PROJECT_NAME"
  - echo "Restoring NuGet Packages..."
  - dotnet restore "src/$PROJECT_NAME.sln"
stages:
  - build
  - code-quality
  - test
  - github-sync
build:
  tags:
  - c#
  - windows
  stage: build
  script:
  - echo "Release build..."
  - dotnet build "src/$PROJECT_NAME.sln" --nologo -c Release /p:Platform="Any CPU"
  artifacts:
    paths:
      - src/$PROJECT_RESULTS_NAME/bin/Release/**
    name: "Build Results"

  allow_failure: false
code-quality:
  tags:
  - c#
  - windows
  stage: code-quality
  script:
  - echo "Running enhanced coding standards validation..."
  - echo "Enforcing mandatory 'this' qualifier and one class per file rules as BUILD-BREAKING errors..."
  - echo "Enhanced standards enforcement is ENABLED - violations will fail the build"
  - cd "src/$PROJECT_NAME"
  - pwsh -File "Build/RunCodingStandardsValidation.ps1"
  artifacts:
    when: always
    paths:
      - src/$PROJECT_NAME/bin/Debug/net9.0-windows/CodeQuality/CodeQualityReport.xml
      - src/$PROJECT_NAME/bin/Release/net9.0-windows/CodeQuality/CodeQualityReport.xml
    reports:
      junit: 
        - src/$PROJECT_NAME/bin/Debug/net9.0-windows/CodeQuality/CodeQualityReport.xml
        - src/$PROJECT_NAME/bin/Release/net9.0-windows/CodeQuality/CodeQualityReport.xml
    name: "Code Quality Report"
    expire_in: 30 days
  dependencies:
  - build
  allow_failure: true

test:
  tags:
  - c#
  - windows
  stage: test
  script:
  - echo "starting tests"
  - dotnet test "src/$PROJECT_NAME.sln" --nologo -c Release /p:Platform="Any CPU"
  dependencies:
  - build
  - code-quality
  allow_failure: true

github-sync:
  tags:
  - c#
  - windows
  stage: github-sync
  script:
  - echo "Synchronizing source code to GitHub..."
  - git remote add github https://$GITHUB_PAT@github.com/$GITHUB_REPO_OWNER/$GITHUB_REPO_NAME.git || git remote set-url github https://$GITHUB_PAT@github.com/$GITHUB_REPO_OWNER/$GITHUB_REPO_NAME.git
  - git fetch github
  - git checkout -B main
  - git add .
  - git commit -m "Sync from GitLab CI - Build $CI_PIPELINE_ID" || echo "No changes to commit"
  - git push github main --force
  - echo "Successfully synchronized to GitHub repository"
  dependencies:
  - build
  - code-quality
  - test
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"
    - when: on_success
  allow_failure: false
