<Window x:Class="BallDragDrop.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BallDragDrop.Views"
        xmlns:viewmodels="clr-namespace:BallDragDrop.ViewModels"
        mc:Ignorable="d"
        Title="Ball Drag and Drop" 
        Height="600" 
        Width="800"
        MinHeight="400"
        MinWidth="600"
        WindowStartupLocation="CenterScreen"
        SizeChanged="Window_SizeChanged"
        Loaded="Window_Loaded"
        Background="#F0F0F0"
        Cursor="{Binding CurrentCursor}"
        RenderOptions.BitmapScalingMode="HighQuality"
        UseLayoutRounding="True">
    <!-- DataContext is set in code-behind -->
    <Window.Resources>
        <!-- Performance optimization: Set cache mode for the entire window -->
        <Style TargetType="{x:Type Window}">
            <Setter Property="RenderOptions.CacheInvalidationThresholdMinimum" Value="0.5" />
            <Setter Property="RenderOptions.CacheInvalidationThresholdMaximum" Value="2.0" />
        </Style>
    </Window.Resources>
    
    <!-- Complete layout with menu, canvas, and status bar -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20px" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30px" />
        </Grid.RowDefinitions>
        <!-- Menu at top -->
        <Menu Grid.Row="0" Background="#F0F0F0">
            <MenuItem Header="_File">
                <MenuItem Header="_Reset" Click="Reset_Click" />
                <Separator />
                <MenuItem Header="_Quit" Click="Quit_Click" />
            </MenuItem>
            <MenuItem Header="_Visual">
                <MenuItem Header="_Switch Ball Visual..." Click="SwitchVisual_Click" />
                <Separator />
                <MenuItem Header="_Load Static Image..." Click="LoadStaticImage_Click" />
                <MenuItem Header="_Load GIF Animation..." Click="LoadGifAnimation_Click" />
                <MenuItem Header="_Load Aseprite Animation..." Click="LoadAsepriteAnimation_Click" />
                <Separator />
                <MenuItem Header="Show _Bounding Box" IsCheckable="True" IsChecked="{Binding ShowBoundingBox, Mode=OneWay}" Click="ToggleBoundingBox_Click" />
            </MenuItem>
        </Menu>

        <!-- Status bar at bottom -->
        <StatusBar Grid.Row="2" Background="LightBlue" BorderBrush="Blue" BorderThickness="2">
            <StatusBarItem MinWidth="150">
                <TextBlock Text="{Binding StatusBarViewModel.AssetName, FallbackValue='Asset: [Loading...]'}" 
                          FontWeight="Bold" Padding="5,2" />
            </StatusBarItem>
            <StatusBarItem MinWidth="100">
                <TextBlock Text="{Binding StatusBarViewModel.StatusText, FallbackValue='Status: [Loading...]'}" 
                          FontWeight="Bold" Padding="5,2" />
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" MinWidth="150">
                <StackPanel Orientation="Horizontal" Margin="5,2">
                    <TextBlock Text="{Binding StatusBarViewModel.CurrentFpsDisplay, FallbackValue='FPS: --'}" 
                              FontWeight="Bold" />
                    <TextBlock Text=" | " FontWeight="Bold" Margin="5,0" />
                    <TextBlock Text="{Binding StatusBarViewModel.AverageFpsDisplay, FallbackValue='Avg: --'}" 
                              FontWeight="Bold" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    
        <!-- Main canvas fills remaining space -->
        <Canvas x:Name="MainCanvas" 
                x:FieldModifier="public"
                Background="White" 
                ClipToBounds="True"
                MouseMove="BallImage_MouseMove"
                RenderOptions.EdgeMode="Aliased"
                CacheMode="BitmapCache"
                Grid.Row="1"
                Margin="2">
            <!-- Ball UI element -->
            <Image x:Name="BallImage"
                   Source="{Binding BallImage}"
                   Width="{Binding Width}"
                   Height="{Binding Height}"
                   Canvas.Left="{Binding Left}"
                   Canvas.Top="{Binding Top}"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   RenderOptions.EdgeMode="Aliased"
                   RenderOptions.ClearTypeHint="Enabled"
                   MouseDown="BallImage_MouseDown"
                   MouseUp="BallImage_MouseUp"
                   Stretch="Uniform"
                   RenderTransformOrigin="0.5,0.5"
                   CacheMode="BitmapCache"
                   SnapsToDevicePixels="True"
                   UseLayoutRounding="True">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <RotateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
                <Image.Effect>
                    <DropShadowEffect ShadowDepth="3" Direction="315" Color="Black" Opacity="0.3" BlurRadius="5" RenderingBias="Performance"/>
                </Image.Effect>
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="RenderOptions.CacheInvalidationThresholdMinimum" Value="0.5" />
                        <Setter Property="RenderOptions.CacheInvalidationThresholdMaximum" Value="2.0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAnimated}" Value="True">
                                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                                <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAnimated}" Value="False">
                                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
                                <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <!-- Bounding box for debugging (shows the actual clickable area) -->
            <Rectangle x:Name="BoundingBoxRectangle"
                       Width="{Binding Width}"
                       Height="{Binding Height}"
                       Canvas.Left="{Binding Left}"
                       Canvas.Top="{Binding Top}"
                       Stroke="Red"
                       StrokeThickness="2"
                       StrokeDashArray="5,3"
                       Fill="Transparent"
                       IsHitTestVisible="False">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowBoundingBox}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>

            <!-- Center point indicator for debugging -->
            <Ellipse x:Name="CenterPointIndicator"
                     Width="4"
                     Height="4"
                     Canvas.Left="{Binding X, Converter={x:Static local:OffsetConverter.Instance}, ConverterParameter=-2}"
                     Canvas.Top="{Binding Y, Converter={x:Static local:OffsetConverter.Instance}, ConverterParameter=-2}"
                     Fill="Blue"
                     IsHitTestVisible="False">
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowBoundingBox}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
        </Canvas>
    </Grid>
</Window>
